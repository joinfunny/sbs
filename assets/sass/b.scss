@charset "utf-8";
@import "reset.css";
@import "a";

$fontsize : 12px;
$baseLineHeight:2;
$baseLineHeight:1.5 !default;
$borderDirection:top !default;
$linkColor:#08c #333 !default;

//一维数据
$px:5px 10px 20px 30px;
//二维数据
$px1:5px 10px,20px 30px;

//map
$heading:(h1:2em,h2:1.5em,h3:1.2em);
/*
*我是css的标准注释
*设置body内距
*/
//我是双斜杠表示的单行注释
//设置body内距
body{
  $fontsize:14px;
  padding:5px;
  font-size: $fontsize;
}
//map
@each $header,$size in $heading{
	#{$header}{
		font-size: $size;
	}
}
a{
	font-size:#{$fontsize}/#{$baseLineHeight};
	color:nth($linkColor,1);
	&:hover{
		color:nth($linkColor,2);
	}
}
p{
  background: #0982c1;
  line-height: $baseLineHeight;
} 

//应用于class和属性
.border-#{$borderDirection}{
	border-#{$borderDirection}:1px solid #ccc;
}

.fakeshadow{
	border:{
		style:solid;
		left:{
			width: 4px;
			color: #888;
		}
		right: {
			width: 2px;
			color: #ccc;
		}
	}
}

//@at-root
//没有跳出
.parent-1{
	color:#f00;
	.child{
		width: 100px;
	}
}

//单个选择器跳出
.parent-2{
	color:#f00;
	@at-root .child{
		width: 200px;
	}
}

.parent-3{
	color:#f00;
	@at-root{
		.child1{
			width:300px;
		}
		.child2{
			width: 400px;
		}
	}
}

//跳出父级元素嵌套
@media print{
	.parent1{
		color:#f00;
		@at-root .child1{
			width: 200px;
		}
	}
}

@media print{
	.parent2{
		color:#f00;
		@at-root(without:media){
			.child2{
				width:200px;
			}
		}
	}
}

@media print{
	.parent3{
		color:#f00;
		@at-root(without:all){
			.child3{
				width:300px;
			}
		}
	}
}


.child{
	@at-root .parent &{
		color:#f00;
	}
}

.keyframes-demo{
	animation:motion 3s infinite;

	@at-root{

		@keyframes motion{
			color:#ff0;
		}
	}
}

@mixin center-block{
	margin-left:auto;
	margin-right:auto;
}

.demo1{
 @include center-block;
}

@mixin opacity($opacity:50){
	opacity:$opacity/100;
	filter:alpha(opacity=$opacity);
}

.opacity1{
	@include opacity;
}

.opacity2{
	@include opacity(80);
}

@mixin horizontal-line($border:1px dashed #ccc,$padding:10px){
	border-bottom:$border;
	padding-top:$padding;
	padding-bottom:$padding;
}

.imgtext-h li{
	@include horizontal-line(1px solid #ccc);
}

.imgtext-h--product li{
	@include horizontal-line($padding:15px);
}

@mixin box-shadow($shadow...){
	-webkit-box-shadow:$shadow;
	box-shadow:$shadow;
}

.box{
	border:1px solid #ccc;
	@include box-shadow(0 2px 2px rgba(0,0,0,.3),0 3px 3px rgba(0,0,0,.3),0 4px 4px rgba(0,0,0,.3));
}

@mixin max-screen($res){
	@media only screen and(max-width:$res){
		@content;
	}
}

@include max-screen(480px){
	body{color:red;}
}

h1{
	border:4px solid #fff;
}

.speaker{
	@extend h1;
	border-width:2px;
}

%ir{
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

$lte7: true;

%clearfix{
  @if $lte7 {
    *zoom: 1;
  }
  &:before,
  &:after {
    content: "";
    display: table;
    font: 0/0 a;
  }
  &:after {
    clear: both;
  }
}
#header{
  h1{
    @extend %ir;
    width:300px;
  }
}
.ir{
  @extend %ir;
}

$baseFontSize:10px !default;
$gray:#ccc !default;

@function pxToRem($px){
	@return $px/$baseFontSize*1rem;
}

body{
	font-size:$baseFontSize;
	color:lighten($gray,10%);
}

.test{
	font-size:pxToRem(16px);
	color:darken($gray,10%);
}

$type: monster;
.ib{
    display:inline-block;
    @if $lte7 {
        *display:inline;
        *zoom:1;
    }
}

p {
  @if $type == ocean {
    color: blue;
  } @else if $type == matador {
    color: red;
  } @else if $type == monster {
    color: green;
  } @else {
    color: black;
  }
}

/* if(true, 1px, 2px) => 1px */

@for $i from 1 through 3 {
  	.item-#{$i} { 
  		width: 2em * $i;
  		height:if($i%2==0, 1px, 2px);
	}
}


@for $i from 1 to 3 {
  	.item-to-#{$i} { 
  		width: 2em * $i;
  		height:if($i%2==0, 1px, 2px);
	}
}

$animal-list: puma, sea-slug, egret, salamander;
@each $animal in $animal-list {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
  }
}


$animal-data: (puma, black, default),(sea-slug, blue, pointer),(egret, white, move);
@each $animal, $color, $cursor in $animal-data {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
    border: 2px solid $color;
    cursor: $cursor;
  }
}

$headings: (h1: 2em, h2: 1.5em, h3: 1.2em);
@each $header, $size in $headings {
  #{$header} {
    font-size: $size;
  }
}